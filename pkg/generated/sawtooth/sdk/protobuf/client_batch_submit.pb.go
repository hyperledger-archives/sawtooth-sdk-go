// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client_batch_submit.proto

package batch_pb2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ClientBatchStatus_Status int32

const (
	ClientBatchStatus_STATUS_UNSET ClientBatchStatus_Status = 0
	ClientBatchStatus_COMMITTED    ClientBatchStatus_Status = 1
	ClientBatchStatus_INVALID      ClientBatchStatus_Status = 2
	ClientBatchStatus_PENDING      ClientBatchStatus_Status = 3
	ClientBatchStatus_UNKNOWN      ClientBatchStatus_Status = 4
)

var ClientBatchStatus_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "COMMITTED",
	2: "INVALID",
	3: "PENDING",
	4: "UNKNOWN",
}

var ClientBatchStatus_Status_value = map[string]int32{
	"STATUS_UNSET": 0,
	"COMMITTED":    1,
	"INVALID":      2,
	"PENDING":      3,
	"UNKNOWN":      4,
}

func (x ClientBatchStatus_Status) String() string {
	return proto.EnumName(ClientBatchStatus_Status_name, int32(x))
}

func (ClientBatchStatus_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9e845bf2ead542bf, []int{0, 0}
}

type ClientBatchSubmitResponse_Status int32

const (
	ClientBatchSubmitResponse_STATUS_UNSET   ClientBatchSubmitResponse_Status = 0
	ClientBatchSubmitResponse_OK             ClientBatchSubmitResponse_Status = 1
	ClientBatchSubmitResponse_INTERNAL_ERROR ClientBatchSubmitResponse_Status = 2
	ClientBatchSubmitResponse_INVALID_BATCH  ClientBatchSubmitResponse_Status = 3
	ClientBatchSubmitResponse_QUEUE_FULL     ClientBatchSubmitResponse_Status = 4
)

var ClientBatchSubmitResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "INTERNAL_ERROR",
	3: "INVALID_BATCH",
	4: "QUEUE_FULL",
}

var ClientBatchSubmitResponse_Status_value = map[string]int32{
	"STATUS_UNSET":   0,
	"OK":             1,
	"INTERNAL_ERROR": 2,
	"INVALID_BATCH":  3,
	"QUEUE_FULL":     4,
}

func (x ClientBatchSubmitResponse_Status) String() string {
	return proto.EnumName(ClientBatchSubmitResponse_Status_name, int32(x))
}

func (ClientBatchSubmitResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9e845bf2ead542bf, []int{2, 0}
}

type ClientBatchStatusResponse_Status int32

const (
	ClientBatchStatusResponse_STATUS_UNSET   ClientBatchStatusResponse_Status = 0
	ClientBatchStatusResponse_OK             ClientBatchStatusResponse_Status = 1
	ClientBatchStatusResponse_INTERNAL_ERROR ClientBatchStatusResponse_Status = 2
	ClientBatchStatusResponse_NO_RESOURCE    ClientBatchStatusResponse_Status = 5
	ClientBatchStatusResponse_INVALID_ID     ClientBatchStatusResponse_Status = 8
)

var ClientBatchStatusResponse_Status_name = map[int32]string{
	0: "STATUS_UNSET",
	1: "OK",
	2: "INTERNAL_ERROR",
	5: "NO_RESOURCE",
	8: "INVALID_ID",
}

var ClientBatchStatusResponse_Status_value = map[string]int32{
	"STATUS_UNSET":   0,
	"OK":             1,
	"INTERNAL_ERROR": 2,
	"NO_RESOURCE":    5,
	"INVALID_ID":     8,
}

func (x ClientBatchStatusResponse_Status) String() string {
	return proto.EnumName(ClientBatchStatusResponse_Status_name, int32(x))
}

func (ClientBatchStatusResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9e845bf2ead542bf, []int{4, 0}
}

// Information about the status of a batch submitted to the validator.
//
// Attributes:
//     batch_id: The id (header_signature) of the batch
//     status: The committed status of the batch
//     invalid_transactions: Info for transactions that failed, if any
//
// Statuses:
//     COMMITTED - the batch was accepted and has been committed to the chain
//     INVALID - the batch failed validation, it should be resubmitted
//     PENDING - the batch is still being processed
//     UNKNOWN - no status for the batch could be found (possibly invalid)
type ClientBatchStatus struct {
	BatchId              string                                  `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Status               ClientBatchStatus_Status                `protobuf:"varint,2,opt,name=status,proto3,enum=sawtooth.sdk.protobuf.ClientBatchStatus_Status" json:"status,omitempty"`
	InvalidTransactions  []*ClientBatchStatus_InvalidTransaction `protobuf:"bytes,3,rep,name=invalid_transactions,json=invalidTransactions,proto3" json:"invalid_transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *ClientBatchStatus) Reset()         { *m = ClientBatchStatus{} }
func (m *ClientBatchStatus) String() string { return proto.CompactTextString(m) }
func (*ClientBatchStatus) ProtoMessage()    {}
func (*ClientBatchStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e845bf2ead542bf, []int{0}
}

func (m *ClientBatchStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientBatchStatus.Unmarshal(m, b)
}
func (m *ClientBatchStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientBatchStatus.Marshal(b, m, deterministic)
}
func (m *ClientBatchStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientBatchStatus.Merge(m, src)
}
func (m *ClientBatchStatus) XXX_Size() int {
	return xxx_messageInfo_ClientBatchStatus.Size(m)
}
func (m *ClientBatchStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientBatchStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ClientBatchStatus proto.InternalMessageInfo

func (m *ClientBatchStatus) GetBatchId() string {
	if m != nil {
		return m.BatchId
	}
	return ""
}

func (m *ClientBatchStatus) GetStatus() ClientBatchStatus_Status {
	if m != nil {
		return m.Status
	}
	return ClientBatchStatus_STATUS_UNSET
}

func (m *ClientBatchStatus) GetInvalidTransactions() []*ClientBatchStatus_InvalidTransaction {
	if m != nil {
		return m.InvalidTransactions
	}
	return nil
}

type ClientBatchStatus_InvalidTransaction struct {
	TransactionId        string   `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ExtendedData         []byte   `protobuf:"bytes,3,opt,name=extended_data,json=extendedData,proto3" json:"extended_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientBatchStatus_InvalidTransaction) Reset()         { *m = ClientBatchStatus_InvalidTransaction{} }
func (m *ClientBatchStatus_InvalidTransaction) String() string { return proto.CompactTextString(m) }
func (*ClientBatchStatus_InvalidTransaction) ProtoMessage()    {}
func (*ClientBatchStatus_InvalidTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e845bf2ead542bf, []int{0, 0}
}

func (m *ClientBatchStatus_InvalidTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientBatchStatus_InvalidTransaction.Unmarshal(m, b)
}
func (m *ClientBatchStatus_InvalidTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientBatchStatus_InvalidTransaction.Marshal(b, m, deterministic)
}
func (m *ClientBatchStatus_InvalidTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientBatchStatus_InvalidTransaction.Merge(m, src)
}
func (m *ClientBatchStatus_InvalidTransaction) XXX_Size() int {
	return xxx_messageInfo_ClientBatchStatus_InvalidTransaction.Size(m)
}
func (m *ClientBatchStatus_InvalidTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientBatchStatus_InvalidTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_ClientBatchStatus_InvalidTransaction proto.InternalMessageInfo

func (m *ClientBatchStatus_InvalidTransaction) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *ClientBatchStatus_InvalidTransaction) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ClientBatchStatus_InvalidTransaction) GetExtendedData() []byte {
	if m != nil {
		return m.ExtendedData
	}
	return nil
}

// Submits a list of Batches to be added to the blockchain.
type ClientBatchSubmitRequest struct {
	Batches              []*Batch `protobuf:"bytes,1,rep,name=batches,proto3" json:"batches,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientBatchSubmitRequest) Reset()         { *m = ClientBatchSubmitRequest{} }
func (m *ClientBatchSubmitRequest) String() string { return proto.CompactTextString(m) }
func (*ClientBatchSubmitRequest) ProtoMessage()    {}
func (*ClientBatchSubmitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e845bf2ead542bf, []int{1}
}

func (m *ClientBatchSubmitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientBatchSubmitRequest.Unmarshal(m, b)
}
func (m *ClientBatchSubmitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientBatchSubmitRequest.Marshal(b, m, deterministic)
}
func (m *ClientBatchSubmitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientBatchSubmitRequest.Merge(m, src)
}
func (m *ClientBatchSubmitRequest) XXX_Size() int {
	return xxx_messageInfo_ClientBatchSubmitRequest.Size(m)
}
func (m *ClientBatchSubmitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientBatchSubmitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientBatchSubmitRequest proto.InternalMessageInfo

func (m *ClientBatchSubmitRequest) GetBatches() []*Batch {
	if m != nil {
		return m.Batches
	}
	return nil
}

// This is a response to a submission of one or more Batches.
// Statuses:
//   * OK - everything with the request worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * INVALID_BATCH - the batch failed validation, likely due to a bad signature
//   * QUEUE_FULL - the batch is unable to be queued for processing, due to
//        a full processing queue.  The batch may be submitted again.
type ClientBatchSubmitResponse struct {
	Status               ClientBatchSubmitResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=sawtooth.sdk.protobuf.ClientBatchSubmitResponse_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ClientBatchSubmitResponse) Reset()         { *m = ClientBatchSubmitResponse{} }
func (m *ClientBatchSubmitResponse) String() string { return proto.CompactTextString(m) }
func (*ClientBatchSubmitResponse) ProtoMessage()    {}
func (*ClientBatchSubmitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e845bf2ead542bf, []int{2}
}

func (m *ClientBatchSubmitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientBatchSubmitResponse.Unmarshal(m, b)
}
func (m *ClientBatchSubmitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientBatchSubmitResponse.Marshal(b, m, deterministic)
}
func (m *ClientBatchSubmitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientBatchSubmitResponse.Merge(m, src)
}
func (m *ClientBatchSubmitResponse) XXX_Size() int {
	return xxx_messageInfo_ClientBatchSubmitResponse.Size(m)
}
func (m *ClientBatchSubmitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientBatchSubmitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientBatchSubmitResponse proto.InternalMessageInfo

func (m *ClientBatchSubmitResponse) GetStatus() ClientBatchSubmitResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientBatchSubmitResponse_STATUS_UNSET
}

// A request for the status of one or more batches, specified by id.
// If `wait` is set to true, the validator will wait to respond until all
// batches are committed, or until the specified `timeout` in seconds has
// elapsed. Defaults to 300.
type ClientBatchStatusRequest struct {
	BatchIds             []string `protobuf:"bytes,1,rep,name=batch_ids,json=batchIds,proto3" json:"batch_ids,omitempty"`
	Wait                 bool     `protobuf:"varint,2,opt,name=wait,proto3" json:"wait,omitempty"`
	Timeout              uint32   `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientBatchStatusRequest) Reset()         { *m = ClientBatchStatusRequest{} }
func (m *ClientBatchStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ClientBatchStatusRequest) ProtoMessage()    {}
func (*ClientBatchStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e845bf2ead542bf, []int{3}
}

func (m *ClientBatchStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientBatchStatusRequest.Unmarshal(m, b)
}
func (m *ClientBatchStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientBatchStatusRequest.Marshal(b, m, deterministic)
}
func (m *ClientBatchStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientBatchStatusRequest.Merge(m, src)
}
func (m *ClientBatchStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ClientBatchStatusRequest.Size(m)
}
func (m *ClientBatchStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientBatchStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClientBatchStatusRequest proto.InternalMessageInfo

func (m *ClientBatchStatusRequest) GetBatchIds() []string {
	if m != nil {
		return m.BatchIds
	}
	return nil
}

func (m *ClientBatchStatusRequest) GetWait() bool {
	if m != nil {
		return m.Wait
	}
	return false
}

func (m *ClientBatchStatusRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// This is a response to a request for the status of specific batches.
// Statuses:
//   * OK - everything with the request worked as expected
//   * INTERNAL_ERROR - general error, such as protobuf failing to deserialize
//   * NO_RESOURCE - the response contains no data, likely because
//     no ids were specified in the request
type ClientBatchStatusResponse struct {
	Status               ClientBatchStatusResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=sawtooth.sdk.protobuf.ClientBatchStatusResponse_Status" json:"status,omitempty"`
	BatchStatuses        []*ClientBatchStatus             `protobuf:"bytes,2,rep,name=batch_statuses,json=batchStatuses,proto3" json:"batch_statuses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ClientBatchStatusResponse) Reset()         { *m = ClientBatchStatusResponse{} }
func (m *ClientBatchStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ClientBatchStatusResponse) ProtoMessage()    {}
func (*ClientBatchStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e845bf2ead542bf, []int{4}
}

func (m *ClientBatchStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientBatchStatusResponse.Unmarshal(m, b)
}
func (m *ClientBatchStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientBatchStatusResponse.Marshal(b, m, deterministic)
}
func (m *ClientBatchStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientBatchStatusResponse.Merge(m, src)
}
func (m *ClientBatchStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ClientBatchStatusResponse.Size(m)
}
func (m *ClientBatchStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientBatchStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientBatchStatusResponse proto.InternalMessageInfo

func (m *ClientBatchStatusResponse) GetStatus() ClientBatchStatusResponse_Status {
	if m != nil {
		return m.Status
	}
	return ClientBatchStatusResponse_STATUS_UNSET
}

func (m *ClientBatchStatusResponse) GetBatchStatuses() []*ClientBatchStatus {
	if m != nil {
		return m.BatchStatuses
	}
	return nil
}

func init() {
	proto.RegisterEnum("sawtooth.sdk.protobuf.ClientBatchStatus_Status", ClientBatchStatus_Status_name, ClientBatchStatus_Status_value)
	proto.RegisterEnum("sawtooth.sdk.protobuf.ClientBatchSubmitResponse_Status", ClientBatchSubmitResponse_Status_name, ClientBatchSubmitResponse_Status_value)
	proto.RegisterEnum("sawtooth.sdk.protobuf.ClientBatchStatusResponse_Status", ClientBatchStatusResponse_Status_name, ClientBatchStatusResponse_Status_value)
	proto.RegisterType((*ClientBatchStatus)(nil), "sawtooth.sdk.protobuf.ClientBatchStatus")
	proto.RegisterType((*ClientBatchStatus_InvalidTransaction)(nil), "sawtooth.sdk.protobuf.ClientBatchStatus.InvalidTransaction")
	proto.RegisterType((*ClientBatchSubmitRequest)(nil), "sawtooth.sdk.protobuf.ClientBatchSubmitRequest")
	proto.RegisterType((*ClientBatchSubmitResponse)(nil), "sawtooth.sdk.protobuf.ClientBatchSubmitResponse")
	proto.RegisterType((*ClientBatchStatusRequest)(nil), "sawtooth.sdk.protobuf.ClientBatchStatusRequest")
	proto.RegisterType((*ClientBatchStatusResponse)(nil), "sawtooth.sdk.protobuf.ClientBatchStatusResponse")
}

func init() { proto.RegisterFile("client_batch_submit.proto", fileDescriptor_9e845bf2ead542bf) }

var fileDescriptor_9e845bf2ead542bf = []byte{
	// 546 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x49, 0x33, 0xfa, 0xe7, 0xb4, 0x29, 0x9e, 0x01, 0x29, 0x1d, 0x5c, 0x54, 0x41, 0x48,
	0xbd, 0x2a, 0xd2, 0x90, 0xe0, 0x82, 0xab, 0xfe, 0x09, 0x23, 0x5a, 0xe7, 0x14, 0x37, 0x61, 0xe2,
	0x2a, 0x72, 0x1b, 0xc3, 0x22, 0xd6, 0x64, 0xcc, 0x0e, 0x43, 0x3c, 0x08, 0x6f, 0xc2, 0x33, 0xf0,
	0x5a, 0x28, 0x4e, 0x42, 0xdb, 0xb5, 0xa0, 0x0a, 0xae, 0xe2, 0xef, 0xe8, 0xf8, 0x3b, 0xf2, 0xef,
	0xb3, 0x03, 0x9d, 0xc5, 0x65, 0xc4, 0x63, 0x19, 0xcc, 0x99, 0x5c, 0x5c, 0x04, 0x22, 0x9d, 0x2f,
	0x23, 0xd9, 0xbf, 0xba, 0x4e, 0x64, 0x82, 0x1f, 0x0a, 0x76, 0x23, 0x93, 0x44, 0x5e, 0xf4, 0x45,
	0xf8, 0x29, 0xaf, 0xcd, 0xd3, 0x0f, 0x47, 0x4d, 0xd5, 0x9a, 0x6b, 0xeb, 0x87, 0x0e, 0x87, 0x23,
	0xe5, 0x30, 0xcc, 0xaa, 0x33, 0xc9, 0x64, 0x2a, 0x70, 0x07, 0xea, 0xb9, 0x5f, 0x14, 0x9a, 0x5a,
	0x57, 0xeb, 0x35, 0x68, 0x4d, 0x69, 0x27, 0xc4, 0x27, 0x50, 0x15, 0xaa, 0xc9, 0xac, 0x74, 0xb5,
	0x5e, 0xfb, 0xf8, 0x59, 0x7f, 0xe7, 0x94, 0xfe, 0x96, 0x69, 0x3f, 0xff, 0xd0, 0x62, 0x3b, 0x8e,
	0xe1, 0x41, 0x14, 0x7f, 0x61, 0x97, 0x51, 0x18, 0xc8, 0x6b, 0x16, 0x0b, 0xb6, 0x90, 0x51, 0x12,
	0x0b, 0x53, 0xef, 0xea, 0xbd, 0xe6, 0xf1, 0xab, 0xbd, 0x6d, 0x9d, 0xdc, 0xc4, 0x5b, 0x79, 0xd0,
	0xfb, 0xd1, 0x56, 0x4d, 0x1c, 0x7d, 0x03, 0xbc, 0xdd, 0x8a, 0x9f, 0x42, 0x7b, 0x6d, 0xfa, 0xea,
	0xbc, 0xc6, 0x5a, 0xd5, 0x09, 0xb1, 0x09, 0xb5, 0x25, 0x17, 0x82, 0x7d, 0xe4, 0xea, 0xd8, 0x0d,
	0x5a, 0x4a, 0xfc, 0x04, 0x0c, 0xfe, 0x55, 0xf2, 0x38, 0xe4, 0x61, 0x10, 0x32, 0xc9, 0x4c, 0xbd,
	0xab, 0xf5, 0x5a, 0xb4, 0x55, 0x16, 0xc7, 0x4c, 0x32, 0x6b, 0x0a, 0xd5, 0x82, 0x2c, 0x82, 0xd6,
	0xcc, 0x1b, 0x78, 0xfe, 0x2c, 0xf0, 0xc9, 0xcc, 0xf6, 0xd0, 0x1d, 0x6c, 0x40, 0x63, 0xe4, 0x9e,
	0x9d, 0x39, 0x9e, 0x67, 0x8f, 0x91, 0x86, 0x9b, 0x50, 0x73, 0xc8, 0xbb, 0xc1, 0xc4, 0x19, 0xa3,
	0x4a, 0x26, 0xa6, 0x36, 0x19, 0x3b, 0xe4, 0x04, 0xe9, 0x99, 0xf0, 0xc9, 0x29, 0x71, 0xcf, 0x09,
	0x3a, 0xb0, 0x28, 0x98, 0xeb, 0x28, 0x54, 0xec, 0x94, 0x7f, 0x4e, 0xb9, 0x90, 0xf8, 0x05, 0xe4,
	0x69, 0x71, 0x61, 0x6a, 0x0a, 0xe6, 0xe3, 0x3f, 0xc0, 0x54, 0x7b, 0x69, 0xd9, 0x6c, 0xfd, 0xd4,
	0xa0, 0xb3, 0xc3, 0x54, 0x5c, 0x25, 0xb1, 0xe0, 0xd8, 0xfd, 0x1d, 0xbc, 0xa6, 0x82, 0x7f, 0xb9,
	0x47, 0x42, 0x1b, 0x0e, 0xb7, 0x2e, 0x80, 0xf5, 0xfe, 0x2f, 0x50, 0xaa, 0x50, 0x71, 0x4f, 0x91,
	0x86, 0x31, 0xb4, 0x1d, 0xe2, 0xd9, 0x94, 0x0c, 0x26, 0x81, 0x4d, 0xa9, 0x4b, 0x51, 0x05, 0x1f,
	0x82, 0x51, 0x10, 0x0a, 0x86, 0x03, 0x6f, 0xf4, 0x06, 0xe9, 0xb8, 0x0d, 0xf0, 0xd6, 0xb7, 0x7d,
	0x3b, 0x78, 0xed, 0x4f, 0x26, 0xe8, 0xc0, 0xe2, 0x9b, 0x74, 0xf2, 0xb9, 0x05, 0x9d, 0x47, 0xd0,
	0x28, 0xef, 0x76, 0xce, 0xa7, 0x41, 0xeb, 0xc5, 0xe5, 0x16, 0x18, 0xc3, 0xc1, 0x0d, 0x8b, 0xa4,
	0x0a, 0xb9, 0x4e, 0xd5, 0x3a, 0xcb, 0x5e, 0x46, 0x4b, 0x9e, 0xa4, 0x52, 0x65, 0x6b, 0xd0, 0x52,
	0x5a, 0xdf, 0x2b, 0x9b, 0xc0, 0x8a, 0x39, 0xff, 0x01, 0x6c, 0xc3, 0xe1, 0xf6, 0x8b, 0x71, 0xa1,
	0x5d, 0xbc, 0x72, 0xa5, 0x79, 0xf6, 0x04, 0xb3, 0x78, 0x7b, 0x7b, 0x1b, 0x1b, 0xf3, 0x95, 0xe0,
	0xc2, 0x3a, 0xff, 0xc7, 0x04, 0xee, 0x41, 0x93, 0xb8, 0x01, 0xb5, 0x67, 0xae, 0x4f, 0x47, 0x36,
	0xba, 0x9b, 0xf1, 0x2f, 0x23, 0x71, 0xc6, 0xa8, 0x3e, 0xec, 0xc0, 0xee, 0x7f, 0xcf, 0x54, 0x9b,
	0x57, 0xd5, 0xfa, 0xf9, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x21, 0x26, 0x4f, 0xa7, 0xb8, 0x04,
	0x00, 0x00,
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block_info.proto

package block_info_pb2

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlockInfoConfig struct {
	LatestBlock          uint64   `protobuf:"varint,1,opt,name=latest_block,json=latestBlock,proto3" json:"latest_block,omitempty"`
	OldestBlock          uint64   `protobuf:"varint,2,opt,name=oldest_block,json=oldestBlock,proto3" json:"oldest_block,omitempty"`
	TargetCount          uint64   `protobuf:"varint,3,opt,name=target_count,json=targetCount,proto3" json:"target_count,omitempty"`
	SyncTolerance        uint64   `protobuf:"varint,4,opt,name=sync_tolerance,json=syncTolerance,proto3" json:"sync_tolerance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockInfoConfig) Reset()         { *m = BlockInfoConfig{} }
func (m *BlockInfoConfig) String() string { return proto.CompactTextString(m) }
func (*BlockInfoConfig) ProtoMessage()    {}
func (*BlockInfoConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bff3cb21482deaa, []int{0}
}

func (m *BlockInfoConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfoConfig.Unmarshal(m, b)
}
func (m *BlockInfoConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfoConfig.Marshal(b, m, deterministic)
}
func (m *BlockInfoConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfoConfig.Merge(m, src)
}
func (m *BlockInfoConfig) XXX_Size() int {
	return xxx_messageInfo_BlockInfoConfig.Size(m)
}
func (m *BlockInfoConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfoConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfoConfig proto.InternalMessageInfo

func (m *BlockInfoConfig) GetLatestBlock() uint64 {
	if m != nil {
		return m.LatestBlock
	}
	return 0
}

func (m *BlockInfoConfig) GetOldestBlock() uint64 {
	if m != nil {
		return m.OldestBlock
	}
	return 0
}

func (m *BlockInfoConfig) GetTargetCount() uint64 {
	if m != nil {
		return m.TargetCount
	}
	return 0
}

func (m *BlockInfoConfig) GetSyncTolerance() uint64 {
	if m != nil {
		return m.SyncTolerance
	}
	return 0
}

type BlockInfo struct {
	// Block number in the chain
	BlockNum uint64 `protobuf:"varint,1,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	// The header_signature of the previous block that was added to the chain.
	PreviousBlockId string `protobuf:"bytes,2,opt,name=previous_block_id,json=previousBlockId,proto3" json:"previous_block_id,omitempty"`
	// Public key for the component internal to the validator that
	// signed the BlockHeader
	SignerPublicKey string `protobuf:"bytes,3,opt,name=signer_public_key,json=signerPublicKey,proto3" json:"signer_public_key,omitempty"`
	// The signature derived from signing the header
	HeaderSignature string `protobuf:"bytes,4,opt,name=header_signature,json=headerSignature,proto3" json:"header_signature,omitempty"`
	// Approximately when this block was committed, as a Unix UTC timestamp
	Timestamp            uint64   `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockInfo) Reset()         { *m = BlockInfo{} }
func (m *BlockInfo) String() string { return proto.CompactTextString(m) }
func (*BlockInfo) ProtoMessage()    {}
func (*BlockInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bff3cb21482deaa, []int{1}
}

func (m *BlockInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfo.Unmarshal(m, b)
}
func (m *BlockInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfo.Marshal(b, m, deterministic)
}
func (m *BlockInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfo.Merge(m, src)
}
func (m *BlockInfo) XXX_Size() int {
	return xxx_messageInfo_BlockInfo.Size(m)
}
func (m *BlockInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfo.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfo proto.InternalMessageInfo

func (m *BlockInfo) GetBlockNum() uint64 {
	if m != nil {
		return m.BlockNum
	}
	return 0
}

func (m *BlockInfo) GetPreviousBlockId() string {
	if m != nil {
		return m.PreviousBlockId
	}
	return ""
}

func (m *BlockInfo) GetSignerPublicKey() string {
	if m != nil {
		return m.SignerPublicKey
	}
	return ""
}

func (m *BlockInfo) GetHeaderSignature() string {
	if m != nil {
		return m.HeaderSignature
	}
	return ""
}

func (m *BlockInfo) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type BlockInfoTxn struct {
	// The new block to add to state
	Block *BlockInfo `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	// If this is set, the new target number of blocks to store in state
	TargetCount uint64 `protobuf:"varint,2,opt,name=target_count,json=targetCount,proto3" json:"target_count,omitempty"`
	// If set, the new network time synchronization tolerance.
	SyncTolerance        uint64   `protobuf:"varint,3,opt,name=sync_tolerance,json=syncTolerance,proto3" json:"sync_tolerance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockInfoTxn) Reset()         { *m = BlockInfoTxn{} }
func (m *BlockInfoTxn) String() string { return proto.CompactTextString(m) }
func (*BlockInfoTxn) ProtoMessage()    {}
func (*BlockInfoTxn) Descriptor() ([]byte, []int) {
	return fileDescriptor_1bff3cb21482deaa, []int{2}
}

func (m *BlockInfoTxn) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockInfoTxn.Unmarshal(m, b)
}
func (m *BlockInfoTxn) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockInfoTxn.Marshal(b, m, deterministic)
}
func (m *BlockInfoTxn) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockInfoTxn.Merge(m, src)
}
func (m *BlockInfoTxn) XXX_Size() int {
	return xxx_messageInfo_BlockInfoTxn.Size(m)
}
func (m *BlockInfoTxn) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockInfoTxn.DiscardUnknown(m)
}

var xxx_messageInfo_BlockInfoTxn proto.InternalMessageInfo

func (m *BlockInfoTxn) GetBlock() *BlockInfo {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *BlockInfoTxn) GetTargetCount() uint64 {
	if m != nil {
		return m.TargetCount
	}
	return 0
}

func (m *BlockInfoTxn) GetSyncTolerance() uint64 {
	if m != nil {
		return m.SyncTolerance
	}
	return 0
}

func init() {
	proto.RegisterType((*BlockInfoConfig)(nil), "BlockInfoConfig")
	proto.RegisterType((*BlockInfo)(nil), "BlockInfo")
	proto.RegisterType((*BlockInfoTxn)(nil), "BlockInfoTxn")
}

func init() { proto.RegisterFile("block_info.proto", fileDescriptor_1bff3cb21482deaa) }

var fileDescriptor_1bff3cb21482deaa = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x49, 0x7f, 0xc4, 0xdc, 0xd6, 0xa6, 0xce, 0x2a, 0x60, 0x17, 0xb5, 0x20, 0xa8, 0x8b,
	0x22, 0xf5, 0x0d, 0xda, 0x95, 0x08, 0x52, 0x62, 0x57, 0x6e, 0x86, 0x49, 0x32, 0x69, 0x43, 0x93,
	0x99, 0x30, 0xb9, 0xa3, 0xd6, 0xb7, 0xf1, 0x71, 0x7c, 0x2b, 0xc9, 0x4c, 0x93, 0x80, 0xba, 0x70,
	0xfb, 0x9d, 0x8f, 0xe1, 0xdc, 0xc3, 0xc0, 0x38, 0xcc, 0x64, 0xb4, 0xa7, 0xa9, 0x48, 0xe4, 0xbc,
	0x50, 0x12, 0xe5, 0xec, 0xd3, 0x01, 0x6f, 0x59, 0xc1, 0x07, 0x91, 0xc8, 0x95, 0x14, 0x49, 0xba,
	0x25, 0x97, 0x30, 0xcc, 0x18, 0xf2, 0x12, 0xa9, 0xd1, 0x7d, 0x67, 0xea, 0x5c, 0xf7, 0x82, 0x81,
	0x65, 0x46, 0xae, 0x14, 0x99, 0xc5, 0xad, 0xd2, 0xb1, 0x8a, 0x65, 0x8d, 0x82, 0x4c, 0x6d, 0x39,
	0xd2, 0x48, 0x6a, 0x81, 0x7e, 0xd7, 0x2a, 0x96, 0xad, 0x2a, 0x44, 0xae, 0x60, 0x54, 0x1e, 0x44,
	0x44, 0x51, 0x66, 0x5c, 0x31, 0x11, 0x71, 0xbf, 0x67, 0xa4, 0xb3, 0x8a, 0x6e, 0x6a, 0x38, 0xfb,
	0x72, 0xc0, 0x6d, 0x3a, 0x92, 0x0b, 0x70, 0xed, 0x15, 0x42, 0xe7, 0xc7, 0x6a, 0xa7, 0x06, 0x3c,
	0xe9, 0x9c, 0xdc, 0xc2, 0x79, 0xa1, 0xf8, 0x6b, 0x2a, 0x75, 0x49, 0x8f, 0xb7, 0xc6, 0xa6, 0x9c,
	0x1b, 0x78, 0x75, 0x60, 0x9f, 0x8a, 0x2b, 0xb7, 0x4c, 0xb7, 0x82, 0x2b, 0x5a, 0xe8, 0x30, 0x4b,
	0x23, 0xba, 0xe7, 0x07, 0xd3, 0xd2, 0x0d, 0x3c, 0x1b, 0xac, 0x0d, 0x7f, 0xe4, 0x07, 0x72, 0x03,
	0xe3, 0x1d, 0x67, 0x31, 0x57, 0xb4, 0x4a, 0x18, 0x6a, 0x65, 0xbb, 0xba, 0x81, 0x67, 0xf9, 0x73,
	0x8d, 0xc9, 0x04, 0x5c, 0x4c, 0x73, 0x5e, 0x22, 0xcb, 0x0b, 0xbf, 0x6f, 0xfa, 0xb5, 0x60, 0xf6,
	0x01, 0xc3, 0xe6, 0x94, 0xcd, 0xbb, 0x20, 0x53, 0xe8, 0xb7, 0x23, 0x0f, 0x16, 0x30, 0x6f, 0xd2,
	0xc0, 0x06, 0xbf, 0x76, 0xec, 0xfc, 0x67, 0xc7, 0xee, 0x1f, 0x3b, 0x2e, 0xef, 0x60, 0x52, 0xb2,
	0x37, 0x94, 0x12, 0x77, 0xf3, 0x9f, 0x1f, 0x21, 0xd4, 0xc9, 0xda, 0x79, 0x19, 0xb5, 0x98, 0x16,
	0xe1, 0x22, 0x3c, 0x31, 0xd9, 0xfd, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x2a, 0x27, 0xe8,
	0x38, 0x02, 0x00, 0x00,
}

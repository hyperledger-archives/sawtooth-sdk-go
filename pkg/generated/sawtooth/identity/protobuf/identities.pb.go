// Code generated by protoc-gen-go. DO NOT EDIT.
// source: identities.proto

package identities

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IdentityPayload_IdentityType int32

const (
	IdentityPayload_IDENTITY_TYPE_UNSET IdentityPayload_IdentityType = 0
	IdentityPayload_POLICY              IdentityPayload_IdentityType = 1
	IdentityPayload_ROLE                IdentityPayload_IdentityType = 2
)

var IdentityPayload_IdentityType_name = map[int32]string{
	0: "IDENTITY_TYPE_UNSET",
	1: "POLICY",
	2: "ROLE",
}

var IdentityPayload_IdentityType_value = map[string]int32{
	"IDENTITY_TYPE_UNSET": 0,
	"POLICY":              1,
	"ROLE":                2,
}

func (x IdentityPayload_IdentityType) String() string {
	return proto.EnumName(IdentityPayload_IdentityType_name, int32(x))
}

func (IdentityPayload_IdentityType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0bb899f6f31212f0, []int{0, 0}
}

type IdentityPayload struct {
	// What type of payload this is for
	Type IdentityPayload_IdentityType `protobuf:"varint,1,opt,name=type,proto3,enum=IdentityPayload_IdentityType" json:"type,omitempty"`
	// Serialize version of a role or policy
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdentityPayload) Reset()         { *m = IdentityPayload{} }
func (m *IdentityPayload) String() string { return proto.CompactTextString(m) }
func (*IdentityPayload) ProtoMessage()    {}
func (*IdentityPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_0bb899f6f31212f0, []int{0}
}

func (m *IdentityPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityPayload.Unmarshal(m, b)
}
func (m *IdentityPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityPayload.Marshal(b, m, deterministic)
}
func (m *IdentityPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityPayload.Merge(m, src)
}
func (m *IdentityPayload) XXX_Size() int {
	return xxx_messageInfo_IdentityPayload.Size(m)
}
func (m *IdentityPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityPayload.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityPayload proto.InternalMessageInfo

func (m *IdentityPayload) GetType() IdentityPayload_IdentityType {
	if m != nil {
		return m.Type
	}
	return IdentityPayload_IDENTITY_TYPE_UNSET
}

func (m *IdentityPayload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("IdentityPayload_IdentityType", IdentityPayload_IdentityType_name, IdentityPayload_IdentityType_value)
	proto.RegisterType((*IdentityPayload)(nil), "IdentityPayload")
}

func init() { proto.RegisterFile("identities.proto", fileDescriptor_0bb899f6f31212f0) }

var fileDescriptor_0bb899f6f31212f0 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x4c, 0x49, 0xcd,
	0x2b, 0xc9, 0x2c, 0xc9, 0x4c, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x9a, 0xce, 0xc8,
	0xc5, 0xef, 0x09, 0x11, 0xac, 0x0c, 0x48, 0xac, 0xcc, 0xc9, 0x4f, 0x4c, 0x11, 0x32, 0xe4, 0x62,
	0x29, 0xa9, 0x2c, 0x48, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x33, 0x92, 0xd5, 0x43, 0x93, 0x87,
	0xf3, 0x43, 0x2a, 0x0b, 0x52, 0x83, 0xc0, 0x4a, 0x85, 0x84, 0xb8, 0x58, 0x52, 0x12, 0x4b, 0x12,
	0x25, 0x98, 0x14, 0x18, 0x35, 0x78, 0x82, 0xc0, 0x6c, 0x25, 0x5b, 0x2e, 0x1e, 0x64, 0x95, 0x42,
	0xe2, 0x5c, 0xc2, 0x9e, 0x2e, 0xae, 0x7e, 0x21, 0x9e, 0x21, 0x91, 0xf1, 0x21, 0x91, 0x01, 0xae,
	0xf1, 0xa1, 0x7e, 0xc1, 0xae, 0x21, 0x02, 0x0c, 0x42, 0x5c, 0x5c, 0x6c, 0x01, 0xfe, 0x3e, 0x9e,
	0xce, 0x91, 0x02, 0x8c, 0x42, 0x1c, 0x5c, 0x2c, 0x41, 0xfe, 0x3e, 0xae, 0x02, 0x4c, 0x4e, 0x72,
	0x5c, 0x52, 0xc5, 0x89, 0xe5, 0x25, 0xf9, 0xf9, 0x25, 0x19, 0x7a, 0x50, 0x67, 0x57, 0x42, 0x1c,
	0x9d, 0x54, 0x9a, 0x16, 0xc0, 0x98, 0xc4, 0x06, 0x66, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff,
	0x79, 0x4a, 0xcd, 0xd8, 0xd4, 0x00, 0x00, 0x00,
}
